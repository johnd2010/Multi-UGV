#!/usr/bin/env python

#!/usr/bin/env python
import rospy
import csv
from sensor_msgs.msg import NavSatFix
from numpy import genfromtxt
from coordinates_waypoint_manager.msg import WaypointRequest

CSV_PATH ="/home/durable/GiG/src/evora_topological_map/data/csv"


class SendWaypoints(object):

  def __init__(self,ns="J0"):
    self.ns = ns
    # node_name = ns+'/waypoint_list'
    
    # Publishers
    # Publishes waypoint
    self.goal_pub = rospy.Publisher(ns+'/waypoint_coordinator/goal_request', WaypointRequest, queue_size=5)
    rospy.sleep(0.5)

  def execute(self, lat,lon,ori=0):
    msg = WaypointRequest()
    msg.latitude = lat
    msg.longitude = lon
    msg.orientation = ori
    rospy.loginfo(self.ns + "Sending goal: " + str(lat) + "; " + str(lon))
    self.goal_pub.publish(msg)


def main():
  rospy.init_node('waypoint_list', anonymous=True)
  wps1 = SendWaypoints("/J1")
  wps2 = SendWaypoints("/J2")
  # Waypoints List
  data="/evora_topology_central_corridor.csv"
  my_waypoints = genfromtxt(CSV_PATH+data, delimiter=',')

 
  for iter,wp in enumerate(my_waypoints):
    
    wps1.execute(my_waypoints[-iter][0],my_waypoints[-iter][1])
    wps2.execute(wp[0],wp[1])
    # wps1.execute(my_waypoints[-iter][0],my_waypoints[-iter][1])
    # wps2.execute(Waypoint(iter+1,my_waypoints[-iter][0],my_waypoints[-iter][1]))

if __name__ == '__main__':
    main()
